import numpy 

bondini_residuesymbol_size = {'A':1, 'C':2, 'D':2, 'E':2, 'F':3, 'G':1, 'H':3, 'I':2, 'K':3, 'L':2, 'M':2, 'N':2, 'P':2, 'Q':2, 'R':3, 'S':2, 'T':2, 'V':2, 'W':3, 'Y':3 } #need to check CYS is correct - not present in either OMPF or BtuB - (ie. proteins looked at so far)

martini_residuesymbol_size = {'A':1, 'C':2, 'D':2, 'E':2, 'F':4, 'G':1, 'H':4, 'I':2, 'K':3, 'L':2, 'M':2, 'N':2, 'P':2, 'Q':2, 'R':3, 'S':2, 'T':2, 'V':2, 'W':5, 'Y':4 } #need to check CYS is correct - not present in either OMPF or BtuB - (ie. proteins looked at so far)

protein_info = {
    'OmpF_BONDINI': {
        'protein_seq': 'AEIYNKDGNKVDLYGKAVGLHYFSKGNGENSYGGNGDMTYARLGFKGETQINSDLTGYGQWEYNFQGNNSEGADAQTGNKTRLAFAGLKYADVGSFDYGRNYGVVYDALGYTDMLPEFGGDTAYSDDFFVGRVGGVATYRNSNFFGLVDGLNFAVQYLGKNERDTARRSNGDGVGGSISYEYEGFGIVGAYGAADRTNLQEAQPLGNGKKAEQWATGLKYDANNIYLAANYGETRNATPITNKFTNTSGFANKTQDVLLVAQYQFDFGLRPSIAYTKSKAKDVEGIGDVDLVNYFEVGATYYFNKNMSTYVDYIINQIDSDNKLGVGSDDTVAVGIVYQF',
        'protein_natoms':683,
        'protein_nmonomers':3,
        'real_resnums':[],
        'axis_name':'OmpF_BONDINI'},
    'BtuB_BONDINI': {
        'protein_seq': 'QDTSPDTLVVTANRFEQPRSTVLAPTTVVTRQDIDRWQSTSVNDVLRRLPGVDITQLSSIFIRGTNASHVLVLIDGVRLNLAGVSGSADLSQFPIALVQRVEYIRGPRSAVYGSDAIGGVVNIITTRDEPGTEISAGWGSNSYQNYDVSTQQQLGDKTRVTLLGDYAHTHDGFLSKTLYGALEHNFTDAWSGFVRGYGYDNRTNYDTRKLYSQSWDAGLRYNGELIKSQLITSYSHSKDYNYDPHYGRYDSSATLDEMKQYTVQWANNVIVGHGSIGAGVDWQKQTTTPGTGYVEDGYDQRNTGIYLTGLQQVGDFTFEGAARSDDNSQFGRHGTWQTSAGWEFIEGYRFIASYGTSYKAPNLGQLYGFYGNPNLDPEKSKQWEGAFEGLTAGVNWRISGYRNDVSDLIDYDDHTLKYYNEGKARIKGVEATANFDTGPLTHTVSYDYVDARNAITDTPLLRRAKQQVKYQLDWQLYDFDWGITYQYLGTRYDKDYSSYPYQTVKMGGVSLWDLAVAYPVTSHLTVRGKIANLFDKDYAGREYTLSGSYTF',
        'protein_natoms':1148,
        'protein_nmonomers':1,
        'real_resnums':range(1,57) + range(63,177) + range(195, 230) + range(241,574) + range(582,595), #BTUB_removed=['NGGSGQ', '57-62','GYDVVAYGNTGTQAQTDN','177-194', 'DAYYSPGSPLL', '230-240','ETVYGYQT','574-581']
        'axis_name':'BtuB_BONDINI'}, 
    'MBP': {
        'protein_seq': 'FGSKALAALAALAALAALAALAALAKSSR',
        'protein_natoms':47,
        'protein_nmonomers':1,
        'real_resnums':[],
        'axis_name':'MBP'},
    'Kir2.2_3spi' : {
        'protein_seq': 'CRNRFVKKNGQCNVEFTNMDDKPQRYIADMFTTCVDIRWRYMLLLFSLAFLVSWLLFGLIFWLIALIHGDLENPGGDDTFKPCVLQVNGFVAAFLFSIETQTTIGYGFRCVTEECPLAVFMVVVQSIVGCIIDSFMIGAIMAKMARPKKRAQTLLFSHNAVVAMRDGKLCLMWRVGNLRKSHIVEAHVRAQLIKPRITEEGEYIPLDQIDIDVGFDKGLDRIFLVSPITILHEINEDSPLFGISRQDLETDDFEIVVILEGMVEATAMTTQARSSYLASEILWGHRFEPVLFEEKNQYKVDYSHFHKTYEVPSTPRCSAKDLVENKFLLSNS',
        'protein_natoms':754,
        'protein_nmonomers':4,
        'real_resnums':numpy.arange(332)+41,
        'axis_name':'Kir2.2_3spi'},
    'OmpF_MARTINI' : {
        'protein_seq': 'AEIYNKDGNKVDLYGKAVGLHYFSKGNGENSYGGNGDMTYARLGFKGETQINSDLTGYGQWEYNFQGNNSEGADAQTGNKTRLAFAGLKYADVGSFDYGRNYGVVYDALGYTDMLPEFGGDTAYSDDFFVGRVGGVATYRNSNFFGLVDGLNFAVQYLGKNERDTARRSNGDGVGGSISYEYEGFGIVGAYGAADRTNLQEAQPLGNGKKAEQWATGLKYDANNIYLAANYGETRNATPITNKFTNTSGFANKTQDVLLVAQYQFDFGLRPSIAYTKSKAKDVEGIGDVDLVNYFEVGATYYFNKNMSTYVDYIINQIDSDNKLGVGSDDTVAVGIVYQF',
        'protein_natoms':736,
        'protein_nmonomers':3,
        'real_resnums':[], # if left as empty list, assumed that res numbers = numpy.arange(len(protein_seqs)) + 1 }
        'axis_name':'OmpF'},
    'BtuB_MARTINI' : {
        'protein_seq': 'QDTSPDTLVVTANRFEQPRSTVLAPTTVVTRQDIDRWQSTSVNDVLRRLPGVDITQNGGSGQLSSIFIRGTNASHVLVLIDGVRLNLAGVSGSADLSQFPIALVQRVEYIRGPRSAVYGSDAIGGVVNIITTRDEPGTEISAGWGSNSYQNYDVSTQQQLGDKTRVTLLGDYAHTHGYDVVAYGNTGTQAQTDNDGFLSKTLYGALEHNFTDAWSGFVRGYGYDNRTNYDAYYSPGSPLLDTRKLYSQSWDAGLRYNGELIKSQLITSYSHSKDYNYDPHYGRYDSSATLDEMKQYTVQWANNVIVGHGSIGAGVDWQKQTTTPGTGYVEDGYDQRNTGIYLTGLQQVGDFTFEGAARSDDNSQFGRHGTWQTSAGWEFIEGYRFIASYGTSYKAPNLGQLYGFYGNPNLDPEKSKQWEGAFEGLTAGVNWRISGYRNDVSDLIDYDDHTLKYYNEGKARIKGVEATANFDTGPLTHTVSYDYVDARNAITDTPLLRRAKQQVKYQLDWQLYDFDWGITYQYLGTRYDKDYSSYPYQTVKMGGVSLWDLAVAYPVTSHLTVRGKIANLFDKDYETVYGYQTAGREYTLSGSYTF',
        'protein_natoms':1332,
        'protein_nmonomers':1,
        'real_resnums':[], # if left as empty list, assumed that res numbers = numpy.arange(len(protein_seqs)) + 1 }
        'axis_name':'BtuB'}, 
    'AAC_1okc' : {
        'protein_seq': 'DQALSFLKDFLAGGVAAAISKTAVAPIERVKLLLQVQHASKQISAEKQYKGIIDCVVRIPKEQGFLSFWRGNLANVIRYFPTQALNFAFKDKYKQIFLGGVDRHKQFWRYFAGNLASGGAAGATSLCFVYPLDFARTRLAADVGKGAAQREFTGLGNCITKIFKSDGLRGLYQGFNVSVQGIIIYRAAYFGVYDTAKGMLPDPKNVHIIVSWMIAQTVTAVAGLVSYPFDTVRRRMMMQSGRKGADIMYTGTVDCWRKIAKDEGPKAFFKGAWSNVLRGMGGAFVLVLYDEIKKFV',
        'protein_natoms':656,
        'protein_nmonomers':1,
        'real_resnums':numpy.arange(296)+2, 
        'axis_name':'AAC'} ,        
    'AAC_6gci' : {
        'protein_seq': 'GMPPFVVDFLMGGVSAAVSKTAAAPIERIKLLVQNQDEMIKAGRLDRRYNGIIDCFRRTTADEGLMALWRGNTANVIRYFPTQALNFAFRDKFKAMFGYKKDKDGYAKWMAGNLASGGAAGATSLLFVYSLDYARTRLANDAKSAKGGGARQFNGLIDVYRKTLASDGIAGLYRGFGPSVAGIVVYRGLYFGMYDSIKPVVLVGPLANNFLASFLLGWCVTTGAGIASYPLDTVRRRMMMTSGEAVKYKSSIDAFRQIIAKEGVKSLFKGAGANILRGVAGAGVLSIYDQLKILLF',
        'protein_natoms':0,
        'protein_nmonomers':1,
        'real_resnums':numpy.arange(296)+3, # if left as empty list, assumed that res numbers = numpy.arange(len(protein_seqs)) + 1 }
        'axis_name':''},
    'TEMPLATE' : {
        'protein_seq': '',
        'protein_natoms':0,
        'protein_nmonomers':1,
        'real_resnums':[], # if left as empty list, assumed that res numbers = numpy.arange(len(protein_seqs)) + 1 }
        'axis_name':''} 
}

def get_real_resnums_strlist(protname):
    if protein_info[protname]['real_resnums'] != []:
       protresnums = numpy.array( map(str, protein_info[protname]['real_resnums']) )
    else:
        protresnums = numpy.array( map(str, numpy.arange(len(list(protein_info[protname]['protein_seq'])))+1) )
    return protresnums

